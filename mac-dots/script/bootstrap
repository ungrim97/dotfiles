#!/usr/bin/env bash
#
# bootstrap installs things.

PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"

# Import lib.sh utils
. "`dirname \`dirname \\\`readlink -f $0\\\`\``/script/lib.sh"
. "`dirname \`dirname \\\`readlink -f $0\\\`\``/script/anyenv_utils.sh"

set -e

link_file () {
  local src=$1 dst=$2

  local dst_parent_folder=$(dirname $dst)
  if [ ! -e ${dst_parent_folder} ]
  then
    mkdir -p ${dst_parent_folder}
  fi

  local overwrite= backup= skip=
  local action=

  if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]
  then

    if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]
    then

      local currentSrc="$(readlink $dst)"

      user "File already exists: $dst ($(basename "$src")), what do you want to do?\n\
      [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
      read -n 1 action

      case "$action" in
        o )
          overwrite=true;;
        O )
          overwrite_all=true;;
        b )
          backup=true;;
        B )
          backup_all=true;;
        s )
          skip=true;;
        S )
          skip_all=true;;
        * )
          ;;
      esac
    fi

    overwrite=${overwrite:-$overwrite_all}
    backup=${backup:-$backup_all}
    skip=${skip:-$skip_all}

    if [ "$overwrite" == "true" ]
    then
      rm -rf "$dst"
      success "removed $dst"
    fi

    if [ "$backup" == "true" ]
    then
      mv "$dst" "${dst}.backup"
      success "moved $dst to ${dst}.backup"
    fi

    if [ "$skip" == "true" ]
    then
      success "skipped $src"
    fi
  fi

  if [ "$skip" != "true" ]  # "false" or empty
  then
    ln -s "$1" "$2"
    success "linked $1 to $2"
  fi
}

install_dotfiles () {
  info 'installing dotfiles'

  local overwrite_all=false backup_all=false skip_all=false
  local tmp_dst

  for src in $(find "$DOTFILES_FOLDER" -maxdepth 8 -name '*.symlink')
  do
    tmp_dst="$HOME/.${src#$DOTFILES_FOLDER/*/}"
    dst="${tmp_dst%.*}"
    echo "Linking ${src} to ${dst}"
    link_file "$src" "$dst"
  done
}

install_apps () {
  . "`dirname \`dirname \\\`readlink -f $0\\\`\``/script/install"
}

install_homebrew () {
  if [ ! $(which brew) ]
  then
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    brew install coreutils findutils gnu-tar gnu-sed gawk gnutls gnu-indent gnu-getopt grep
  fi
}

install_homebrew
install_anyenv
install_apps
install_dotfiles

echo ''
echo '  All installed!'
